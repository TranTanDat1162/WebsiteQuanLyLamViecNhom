@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "ResetPassword";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}


<div class="row align-items-center justify-content-center height-self-center">
    <div class="col-lg-8">
        <div class="card auth-card">
            <div class="card-body p-0">
                <div class="d-flex align-items-center auth-content">
                    <div class="col-lg-6 bg-primary content-left">
                        <div class="p-3">
                            <h2 class="mb-2 text-white">Đổi mật khẩu</h2>
                            <p>UEF - Quản lý làm việc nhóm</p>
                            <form id="formPasswordChange" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input asp-for="Input.Code" type="hidden" />
                                <input asp-for="Input.Email" type="hidden" /> <!-- Giữ trường email ẩn -->
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="floating-label form-group">
                                            <div class="input-group">
                                                <input asp-for="Input.Password" id="newPassword" class="floating-input form-control" type="password" placeholder="Nhập mật khẩu mới">
                                                <div class="input-group-append">
                                                    <span id="eye-icon" class="input-group-text" onclick="togglePasswordVisibility('newPassword')">
                                                        <i class="ri-eye-line" id="newPasswordShow"></i>
                                                        <i class="ri-eye-off-line d-none" id="newPasswordHide"></i>
                                                    </span>
                                                </div>
                                            </div>
                                            <span asp-validation-for="Input.Password" class="text-danger" id="newPasswordError"></span>
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="floating-label form-group">
                                            <div class="input-group">
                                                <input asp-for="Input.ConfirmPassword" id="confirmPassword" class="floating-input form-control" type="password" placeholder="Xác nhận mật khẩu mới">
                                                <div class="input-group-append">
                                                    <span id="eye-icon" class="input-group-text" onclick="togglePasswordVisibility('confirmPassword')">
                                                        <i class="ri-eye-line" id="confirmPasswordShow"></i>
                                                        <i class="ri-eye-off-line d-none" id="confirmPasswordHide"></i>
                                                    </span>
                                                </div>
                                            </div>
                                            <span asp-validation-for="Input.ConfirmPassword" class="text-danger" id="confirmPasswordError"></span>
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-white">Đổi mật khẩu</button>
                            </form>
                        </div>
                    </div>
                    <div class="col-lg-6 content-right">
                        <img src="https://cdn.haitrieu.com/wp-content/uploads/2022/05/Logo-UEF.png" class="img-fluid image-right" alt="">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Show/Hide password*@
<style>
    #eye-icon {
        cursor: pointer; /* Đổi kiểu con trỏ thành pointer khi di chuyển vào biểu tượng */
    }
</style>

<script>
    function togglePasswordVisibility(inputId) {
        var passwordInput = document.getElementById(inputId);
        var showIcon = document.getElementById(inputId + "Show");
        var hideIcon = document.getElementById(inputId + "Hide");

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            showIcon.classList.add("d-none");
            hideIcon.classList.remove("d-none");
        } else {
            passwordInput.type = "password";
            showIcon.classList.remove("d-none");
            hideIcon.classList.add("d-none");
        }
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var newPasswordField = document.getElementById("newPassword");
        var newPasswordErrorField = document.getElementById("newPasswordError");
        var confirmPasswordField = document.getElementById("confirmPassword");
        var confirmPasswordErrorField = document.getElementById("confirmPasswordError");
        var submitButton = document.querySelector("#formPasswordChange button[type='submit']");

        // Disable nút submit ban đầu
        submitButton.disabled = true;

        // Thêm sự kiện lắng nghe vào các trường input
        newPasswordField.addEventListener("input", validateForm);
        confirmPasswordField.addEventListener("input", validateForm);

        // Kiểm tra và cập nhật trạng thái của nút submit
        function validateForm() {
            var newPassword = newPasswordField.value;
            var confirmPassword = confirmPasswordField.value;
            var errors = false;

            // Kiểm tra xác nhận mật khẩu
            if (newPassword !== confirmPassword) {
                confirmPasswordErrorField.innerText = "Mật khẩu xác nhận không khớp.";
                confirmPasswordErrorField.classList.add("text-danger"); // Thêm class text-danger
                errors = true;
            } else {
                confirmPasswordErrorField.innerText = "";
                confirmPasswordErrorField.classList.remove("text-danger"); // Loại bỏ class text-danger
            }

            // Kiểm tra mật khẩu mới
            if (newPassword.length < 8) {
                newPasswordErrorField.innerText = "Mật khẩu mới phải có ít nhất 8 ký tự.";
                newPasswordErrorField.classList.add("text-danger"); // Thêm class text-danger
                errors = true;
            } else if (!/(?=.*[A-Z])(?=.*[!@@#$%^&*()_+])[a-zA-Z0-9!@@#$%^&*()_+]/.test(newPassword)) {
                newPasswordErrorField.innerText = "Mật khẩu mới phải chứa ít nhất một ký tự in hoa và một ký tự đặc biệt.";
                newPasswordErrorField.classList.add("text-danger"); // Thêm class text-danger
                errors = true;
            } else {
                newPasswordErrorField.innerText = "";
                newPasswordErrorField.classList.remove("text-danger"); // Loại bỏ class text-danger
            }

            // Kiểm tra và cập nhật trạng thái của nút submit
            if (!newPassword || !confirmPassword || errors) {
                submitButton.disabled = true; // Vô hiệu hóa nút submit nếu có lỗi hoặc trường trống
            } else {
                submitButton.disabled = false; // Kích hoạt nút submit nếu không có lỗi và cả hai trường đã được nhập
            }
        }
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
