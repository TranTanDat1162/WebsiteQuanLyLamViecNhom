@model WebsiteQuanLyLamViecNhom.HelperClasses.TempModels.ProjectDTO
@{
    Layout = "~/Views/Shared/_TeacherLayout.cshtml";
}
<!-- Class header start -->
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="d-flex flex-wrap align-items-center justify-content-between breadcrumb-content"
                    data-breadcrumbitems="">
                    <h5> Danh sách đồ án</h5>
                    <div class="d-flex flex-wrap align-items-center justify-content-between">
                        <div class="list-grid-toggle d-flex align-items-center mr-3">
                            <div data-toggle-extra="tab"
                                 data-target-extra="#grid"
                                 >
                                <div class="grid-icon mr-2" data-toggle="tooltip" data-placement="bottom" data-original-title="Danh sách đồ án">
                                   <i class="ri-file-list-3-line"></i>
                                </div>
                            </div>
                            <div data-toggle-extra="tab" 
                                 data-target-extra="#list"
                                 class="active">
                                <div class="grid-icon mr-2" data-toggle="tooltip" data-placement="bottom" data-original-title="Danh sách nhóm">
                                   <i class="ri-group-line"></i>                                
                                </div>
                            </div>
                            <div data-toggle-extra="tab"
                                 data-target-extra="#report"
                                 >
                                <div class="grid-icon" data-toggle="tooltip" data-placement="bottom" data-original-title="Thống kê dữ liệu">
                                    <i class="ri-file-chart-line"></i>
                                </div>
                            </div>
                        </div>
                        <div class="pl-3 pr-3 border-left btn-new">
                            <a href="#"
                               class="btn btn-primary"
                               data-target="#new-notification-modal"
                               data-toggle="modal"
                               title="Thông báo">
                               
                               <i class="ri-chat-new-line"></i>
                              </a>
                            </div>
                        <div class="pl-3 pr-2 border-left btn-new">
                            <a href="#"
                               class="btn btn-primary"
                               data-target="#new-project-modal"
                               data-toggle="modal">Tạo đồ án</a>
                        </div>
                        @if(Model.CurrentClass.RoleGroup != RoleGroup.AssignByStudent)
                        {

                            <div class="pl-2 border-left btn-new">
                                <a href="#"
                                   class="btn btn-primary"
                                   data-target="#new-group-modal"
                                   data-toggle="modal">Tạo nhóm</a>
                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Class header end -->

<!-- Project list start -->
<div id="grid"
     class="item-content animate__animated animate__fadeIn"
     data-toggle-extra="tab-content">
    <div class="row">
        @if (Model != null)
        {
            @foreach (var item in Model.CurrentProjects)
            {
                <div class="col-lg-4 col-md-6">
                    <div class="card card-block card-stretch card-height class-hover">
                        <div class="card-body">
                            <a href="#" onclick="showProjectDetail(this)"
                                        data-target="#project-detail-modal" data-toggle="modal"
                                        data-project-name="@item.Name"
                                        data-project-requirement="@item.Requirements"
                                        data-project-deadline="@item.Deadline.ToString("yyyy-MM-dd")"
                                        data-project-id="@item.Id"
                                        data-project-attachment="@item.fileIDJSON"
                                        >
                                <span class="link-spanner"></span>
                            </a>

                            <div class="d-flex align-items-center justify-content-between mb-4">
                                <div id="circle-progress-@item.Id"
                                class="circle-progress-01 circle-progress circle-progress-primary"
                                data-min-value="0"
                                data-max-value="100"
                                data-value="25"
                                data-type="percent"></div>
                                <i class="ri-star-fill m-0 text-warning"></i>
                            </div>
                            <h5 class="mb-1">@item.Name</h5>
                            <p class="mb-3">
                                @item.Requirements
                            </p>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-lg-4 col-md-6">
                No projects found at the moment.
            </div>
        }
    </div>
</div>
<!-- Project list end -->

<!-- Group list start -->
<div id="list"
     class="item-content animate__animated animate__fadeIn active"
     data-toggle-extra="tab-content">
    <div class="row">
        @foreach (var item in Model.GroupsInClass)
        {
            <div class="col-lg-6">
                <div class="card class-hover">
                    <div class="card-body">
                        <a href="/Teacher/Project/@item.Group.Project.Class.Code/@item.Group.Id">
                            <span class="link-spanner"></span>
                        </a>
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="d-flex align-items-center">
                                    <div id="circle-progress-@item.Group.LeaderID"
                                         class="circle-progress-02 circle-progress circle-progress-primary"
                                         data-min-value="0"
                                         data-max-value="100"
                                         data-value="@item.percentageTaskDone"
                                         data-type="percent"></div>
                                    <div class="ml-3">
                                        <h5 class="mb-1">@($"{item.Group.Project.Name} - {item.Group.LeaderID}")</h5>
                                        <p class="mb-0">
                                            @item.Group.MOTD
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 text-sm-right mt-3 mt-sm-0">
                                <div class="iq-media-group">
                                    @foreach (var member in item.Group.Students)
                                    {
                                        <a href="#" class="iq-media">
                                            @if (member.Student.StudentImgId != null)
                                            {
                                                <img class="img-fluid avatar-40 rounded-circle" src="https://lh3.googleusercontent.com/u/0/d/@member.Student.StudentImgId=w250-h238-p-k-rw-v1-nu-iv1" alt="" />
                                            }
                                            else
                                            {
                                                <img class="img-fluid avatar-40 rounded-circle" src="../assets/images/user/01.jpg" alt="" />
                                            }
                                        </a>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- Group list end -->

<!-- Report tab start -->
<div id="report"
     class="item-content animate__animated animate__fadeIn"
     data-toggle-extra="tab-content">
    <div class="row">
        <!-- I forgot to include class's End date so now this is useless-->
@*         <div class="col-lg-12">
            <div class="iq-progress-bar bg-primary-light mt-2">
                <span id="class-progress-bar" class="bg-primary iq-progress progress-1" data-percent="0" 
                style="transition: width 2s ease 0s; width: 0%;"
                onload="generateProgressBar(@Model.CurrentClass.OpenDate, @Model.CurrentClass.)"></span>
            </div>
        </div> *@
        <div class="col-6 col-lg-4">
            <div class="card card-block card-stretch">
                <div class="card-body">
                    <div class="top-block d-flex align-items-center justify-content-between">
                        <h5>Số lượng sinh viên</h5>
                    </div>
                    <h3>
                        <span class="counter" style="visibility: visible;">
                            @(Model.StudentList?.Count())
                        </span> sinh viên
                    </h3>
                    <div class="d-flex align-items-center justify-content-between mt-1">
                        <p class="mb-0">Số lượng sinh viên chưa có nhóm</p>
                        <span class="text-primary">
                            @(Model.StudentList?.Where(student => student.GroupID == null).Count() ?? 0)
                        </span>
                    </div>
                    <div class="iq-progress-bar bg-primary-light mt-2">
                        <span class="bg-primary iq-progress progress-1"
                                data-percent="@(Math.Ceiling
(((double)(Model.StudentList.Where(student => student.GroupID == null).Count()) / (double)(Model.StudentList.Count()) * 100)))"
                                style="transition: width 2s ease 0s; width: auto">
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-lg-4">
            <div class="card card-block card-stretch">
                <div class="card-body">
                    <div class="top-block d-flex align-items-center justify-content-between">
                        <h5>Số nhóm trong lớp</h5>
                    </div>
                    <h3>
                        <span class="counter" style="visibility: visible;">
                            @(Model.GroupsInClass?.Count() ?? 0)
                        </span> nhóm
                    </h3>
                    <div class="d-flex align-items-center justify-content-between mt-1">
                        <p class="mb-0">Số nhóm chưa chấm điểm</p>
                        <span class="text-primary">
                            @((Model.GroupsInClass?.Where(group => group.Group.Students.FirstOrDefault()?.Score == null).Count() ?? 0)) nhóm
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-lg-4">
            <div class="card card-block card-stretch">
                <div class="card-body">
                    <div class="top-block d-flex align-items-center justify-content-between">
                        <h5>Điểm trung bình của lớp</h5>
                    </div>
                    <h3>
                        <span class="counter" style="visibility: visible;">
                            @(Model.StudentList.Average(student => student.Score ?? 0).ToString("0.00"))
                        </span> điểm
                    </h3>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <div class="header-title">
                        <h4 class="card-title">Danh sách sinh viên</h4>
                    </div>
                </div>
                <div class="card-body">
                    <table class="table table-striped scrolldown">
                        <thead class="bg-blue">
                            <tr>
                                <th scope="col" style="width: 5.4%;" >#</th>
                                <th scope="col" style="width: 20%;">MSSV</th>
                                <th scope="col" style="width: 18.5%;">Họ</th>
                                <th scope="col" style="width: 19.5%;">Tên</th>
                                <th scope="col" style="width: 18.5%;">Đề tài</th>
                                <th scope="col">Điểm</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                string currentGroupId = null;

                                int i = 1;
                                bool flipper = true;
                                    @foreach (var student in Model.StudentList.OrderByDescending(s => s.Group?.Id).ToList())
                                {
                                    // Check if group has changed
                                    var isNewGroup = currentGroupId != student.Group?.Id;

                                    currentGroupId = student.Group?.Id;
                                    
                                    if (isNewGroup)
                                    {
                                        flipper = !flipper;
                                    }
                                    if (currentGroupId == null)
                                    {
                                            <tr>
                                                <th scope="row">@i</th>
                                                <td>@student.Student.StudentCode</td>
                                                <td>@student.Student.LastName</td>
                                                <td>@student.Student.FirstName</td>
                                                <td>@student.Group?.Project.Name</td>
                                                <td>@student.Score</td>
                                            </tr>
                                    }
                                    else if (flipper)
                                    {
                                            <tr class="table-skyblue">
                                                <th scope="row">@i</th>
                                                <td>@student.Student.StudentCode</td>
                                                <td>@student.Student.LastName</td>
                                                <td>@student.Student.FirstName</td>
                                                <td>@student.Group?.Project.Name</td>
                                                <td>@student.Score</td>
                                            </tr>
                                    }
                                    else
                                    {
                                            <tr class="table-info">
                                                <th scope="row">@i</th>
                                                <td>@student.Student.StudentCode</td>
                                                <td>@student.Student.LastName</td>
                                                <td>@student.Student.FirstName</td>
                                                <td>@student.Group?.Project.Name</td>
                                                <td>@student.Score</td>
                                            </tr>
                                    }
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>            
        </div>
        <div class="col-xl-4">
            <div class="card card-block card-stretch">
                <div class="card-body">
                    <div class="top-block d-flex align-items-center justify-content-between">
                        <h5>Tổng các công việc</h5>
                        <span class="badge badge-primary">Tất cả các nhóm</span>
                    </div>
                    <h3>
                        <span class="counter" style="visibility: visible;">
                            @(Model.GroupsInClass?.Sum(group => group.totalTasks) ?? 0)
                        </span> tasks
                    </h3>
                    <div class="d-flex align-items-center justify-content-between mt-1">
                        <p class="mb-0">Tỉ lệ hoàn tất</p>
                        <span class="text-primary">
                            @(Model.GroupsInClass?.Sum(group => group.percentageTaskDone) ?? 0) %
                        </span>
                    </div>
                    <div class="iq-progress-bar bg-primary-light mt-2">
                        <span class="bg-primary iq-progress progress-1"
                              data-percent="@{
                                    @((Model.GroupsInClass?.Sum(group => group.percentageTaskDone) ?? 0))
                            }"
                              style="transition: width 2s ease 0s; width: auto">
                        </span>
                    </div>
                </div>
            </div>
            
            <div class="card card-block card-stretch">
                <div class="card-body">
                    <canvas id="myChart" style="width:100%"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Report tab end -->

<!-- Modal list start -->
<div class="modal fade" role="dialog" aria-modal="true" id="new-project-modal">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header d-block text-center pb-3 border-bttom">
                <h3 class="modal-title" id="exampleModalCenterTitle01">Tạo Project</h3>
            </div>
            <form asp-action="CreateProject" asp-controller="Teacher" enctype="multipart/form-data">
                <div class="modal-body">
                <div class="row">
                    <input type="hidden" name="id" value="@Model.ClassID" />
                    <div class="col-lg-12">
                        <div class="form-group mb-3">
                            <label for="exampleInputText01" class="h5">Tên Project*</label>
                            <input asp-for="createProjectDTO.Name" type="text" class="form-control" id="exampleInputText01" placeholder="Project Name" required="required">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group mb-3">
                            <label for="exampleInputText2" class="h5">Yêu cầu *</label>
                                <input asp-for="createProjectDTO.Requirement" type="text" class="form-control" id="exampleInputText02" placeholder="Placeholder" required="required">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group mb-3">
                            <label for="exampleInputText004" class="h5">Ngày kết thúc*</label>
                                <input asp-for="createProjectDTO.Deadline" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" id="exampleInputText004" value="" required="required">
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group mb-0">
                            <label for="exampleInputText01" class="h5">Đính kèm tệp mới</label>
                            <div class="custom-file">
                                <input asp-for="createProjectDTO.Attachments" type="file" class="custom-file-input" id="updateProjectDTO_attachment" multiple>
                                <label class="custom-file-label" for="inputGroupFile003">Upload media</label>
                            </div>
                        </div>
                    </div>
@*                     <div class="col-lg-12">
                        <div class="form-group mb-3">
                            <label for="exampleInputText07" class="h5">Assign Members*</label>
                                 <select asp-for="" asp-items="Html.GetEnumSelectList<RoleGroup>()" name="type" class="selectpicker form-control" data-style="py-0">
                                <option selected="selected" value="">Please select</option>
                            </select> 
                        </div>
                    </div> *@
                    <div class="col-lg-12">
                        <div class="d-flex flex-wrap align-items-ceter justify-content-center mt-2">
                            <input type="submit" value="Tạo" class="btn btn-primary mr-3" />
                            <div class="btn btn-primary" data-dismiss="modal">Thoát</div>
                        </div>
                    </div>
                </div>
            </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" role="dialog" aria-modal="true" id="new-group-modal">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header d-block text-center pb-3 border-bttom">
                <h3 class="modal-title" id="exampleModalCenterTitle01">Tạo Nhóm</h3>
            </div>
            <form asp-action="CreateGroup" asp-controller="Teacher">
                <div class="modal-body">
                    <div class="row">
                        <input type="hidden" name="id" value="@Model.ClassID" />
                        <div class="col-lg-12">
                            <div class="form-group mb-3">
                                <label for="exampleInputText01" class="h5">Chọn Project*</label>
                                <select asp-for="createGroupDTO.ProjectId" name="createGroupDTO.ProjectId" class="selectpicker form-control" data-style="py-0" required="required">
                                    <option selected="selected" disabled value=""><strong>Vui lòng chọn đồ án</strong></option>
                                    @foreach (var project in Model.CurrentProjects)
                                    {
                                        <option value="@project.Id">@project.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group mb-3">
                                <label for="exampleInputText2" class="h5">Ghi chú *</label>
                                <input asp-for="createGroupDTO.MOTD" type="text" class="form-control" id="exampleInputText02" placeholder="Placeholder" required="required">
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group mb-3">
                                <label for="exampleInputText2" class="h5">Chọn thành viên *</label>
                                <select asp-for="createGroupDTO.memberList" id="createGroupDTO_memberList" name="createGroupDTO.memberList"
                                        class="selectpicker form-control"
                                        data-style="py-0" multiple
                                        required="required">
                                    <option disabled value="">Please select</option>
                                    @foreach (var student in Model.StudentList)
                                    {
                                        if(student.GroupID == null)
                                        {
                                            <option value="@student.StudentId">@($"{student.Student.LastName} {student.Student.FirstName}")</option>
                                        }

                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group mb-3">
                                <label for="exampleInputText2" class="h5">Chọn nhóm trưởng *</label>
                                <select asp-for="createGroupDTO.LeaderID" id="dependentDropdown" class="selectpicker form-control" required="required">
                                    <option disabled value="">Please select leader</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="d-flex flex-wrap align-items-ceter justify-content-center mt-2">
                                <input type="submit" value="Tạo" class="btn btn-primary mr-3" />
                                <div class="btn btn-primary" data-dismiss="modal">Thoát</div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" role="dialog" aria-modal="true" id="project-detail-modal">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header d-block text-center pb-3 border-bttom">
                <h3 class="modal-title" id="exampleModalCenterTitle01">Cập nhật Project</h3>
            </div>
            <form asp-action="UpdateProject" asp-controller="Teacher" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="row">
                        <input type="hidden" name="id" id="updateProjectDTO_id" />
                        <div class="col-lg-12">
                            <div class="form-group mb-3">
                                <label for="exampleInputText01" class="h5">Tên Project*</label>
                                <input asp-for="updateProjectDTO.Name" type="text" class="form-control" id="updateProjectDTO_name" placeholder="Project Name" required="required">
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group mb-3">
                                <label for="exampleInputText2" class="h5">Yêu cầu*</label>
                                <input asp-for="updateProjectDTO.Requirement" type="text" class="form-control" id="updateProjectDTO_require" placeholder="Placeholder" required="required">
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group mb-3">
                                <label for="exampleInputText004" class="h5">Ngày kết thúc*</label>
                                <input asp-for="updateProjectDTO.Deadline" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" id="updateProjectDTO_deadline"  required="required">
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group mb-0" id="updateProjectDTO_attachments">
                                <label for="exampleInputText01" class="h5">Các tệp cũ</label>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group mb-0">
                                <label for="exampleInputText01" class="h5">Đính kèm tệp mới</label>
                                <div class="custom-file">
                                    <input asp-for="updateProjectDTO.Attachments" type="file" class="custom-file-input" id="updateProjectDTO_attachment" multiple >
                                    <label class="custom-file-label" for="inputGroupFile003">Upload media</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="d-flex flex-wrap align-items-ceter justify-content-center mt-2">
                                <input type="submit" value="Cập nhật" class="btn btn-primary mr-3" />
                                <div class="btn btn-primary" data-dismiss="modal">Thoát</div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" role="dialog" aria-modal="true" id="new-notification-modal">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered" role="dialog"> 
        <div class="modal-content">
            <div class="modal-header d-block text-center pb-3 border-bttom">
                <h3 class="modal-title" id="exampleModalCenterTitle01">Tạo thông báo</h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12 ">
                        <div class="card">
                            <div class="card-body" id="notificationCardBody">
                                <div class="form-label-group">
                                    <input hidden type="text" id="userInput" value="@Model.TeacherId"/>
                                    <input hidden type="text" id="roomInput" value="@Model.ClassID"/>
                                    <textarea class="form-control" id="messageInput" rows="2" placeholder="Viết thông báo ở đây"></textarea>
                                    <label>Textarea</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="d-flex flex-wrap align-items-ceter justify-content-center mt-2">
                            <div class="btn btn-primary mr-3" id="sendButton">Gửi</div>
                            <div class="btn btn-primary" data-dismiss="modal">Thoát</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal list end -->

<script type="text/javascript" src="/assets/js/customizer.js"></script>
<script>
    // Summary: Khi Teacher chọn ds thành viên của group thì 
    // dropdown list cho việc chọn Leader sẽ populated 
    // dựa vào những thành viên vừa được chọn.
    document.getElementById('createGroupDTO_memberList').addEventListener('change', function () {
        // Lấy ds id của thành viên vừa đc chọn tr group
        var selectedStudentIds = getSelectValues(this)

        // Trả về list các tv trong group để chọn leader group đó
        fetchDependentOptions(selectedStudentIds);
    });

    // Dựa vào element select, Lấy element option
    // được chọn và trả về value của từng option đó 
    // dưới dạng array String.
    function getSelectValues(select) {
        var result = [];
        var options = select && select.options;
        var opt;

        for (var i = 0, iLen = options.length; i < iLen; i++) {
            opt = options[i];

            if (opt.selected) {
                result.push(opt.value || opt.text);
            }
        }
        return result;
    }

    // Dựa vào array String vừa lấy được, Tạo request cho server
    // dưới dạng JSON và nhận họ tên + id của student và tạo element
    // option cho từng student đó
    // RequestBody: 
    //  {
    //      "selectedStudentIds": ["student1Id", "student2Id", "student3Id"]
    //  }
    // ResponeBody:
    //  {
    //      "data": [
    //          {
    //              "value": "Student1Id",
    //              "text": "John Doe"
    //          },
    //          {
    //              "value": "DEF456",
    //              "text": "Jane Smith"
    //          },
    //          {
    //              "value": "GHI789",
    //              "text": "Michael Brown"
    //          }
    //      ]
    //  }

    function fetchDependentOptions(selectedStudentIds) {
        $.ajax({
            url: '/Teacher/GetDependentOptions',
            data: { selectedStudentIds: selectedStudentIds },
            type: 'POST',
            success: function (response) {
                $('#dependentDropdown').empty();
                $('#dependentDropdown').append('<option disabled value="">Please select</option>');
                $.each(response.data, function (index, option) {
                    $('#dependentDropdown').append($('<option></option>').val(option.value).text(option.text));
                });
                $('#dependentDropdown').selectpicker('refresh');
            }
        });
    }

    function showProjectDetail(project) {
        let pName = project.getAttribute("data-project-name");
        let pRequirement = project.getAttribute("data-project-requirement");
        let pDeadline = project.getAttribute("data-project-deadline");
        let pId = project.getAttribute("data-project-id");

        let pAttachments = project.getAttribute("data-project-attachment")

        document.getElementById("updateProjectDTO_name").value = pName;
        document.getElementById("updateProjectDTO_require").value = pRequirement;
        document.getElementById("updateProjectDTO_deadline").value = pDeadline;
        document.getElementById("updateProjectDTO_id").value = pId;

        if(pAttachments != null){
            let pAttachmentList = JSON.parse(pAttachments);

            const attachmentsContainer = document.getElementById("updateProjectDTO_attachments");
            while (attachmentsContainer.children.length > 1) {
                attachmentsContainer.removeChild(attachmentsContainer.lastChild);
            }

            // Create the heading element with the link
            const heading = document.createElement("h5");
            heading.classList.add("pl-2", "mb-3");
            heading.textContent = "";

            for (let i = 0; i < pAttachmentList.length; i++) {
                let attachment = pAttachmentList[i];

                // Access download link and file name separately
                const downloadLink = attachment[0]; // First element holds the link
                const fileName = attachment[1];    // Second element holds the name

                // Create the "New" badge
                const badge = document.createElement("a");
                badge.classList.add("badge", "badge-info", "mr-2");
                badge.textContent = fileName;

                // Append the badge to the heading
                heading.appendChild(badge);

                // Add downloadlink to a tag
                badge.href = downloadLink;

                // Append the <a> element to the container
                attachmentsContainer.appendChild(heading);

            }
        }
    }

    const breadcrumbData = '@Html.Raw(Json.Serialize(Model.crumbs))';
    generateBreadcrumbs(breadcrumbData);
    //# sourceURL=UpdateLeaderSelect.js

</script>


<!-- Script list -->
<script src="~/assets/js/signalr/dist/browser/signalr.js"></script>
<script src="~/assets/js/signalr-services.js"></script>

<!-- Sử dụng CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('sendButton').addEventListener('click', function () {
        // Lấy giá trị từ textarea
        var message = document.getElementById('messageInput').value;

        // Gửi thông báo hoặc thực hiện các xử lý khác ở đây

        // Đóng modal
        $('#new-notification-modal').modal('hide');

        // Hiển thị thông báo thành công với SweetAlert
        Swal.fire({
            icon: 'success',
            title: 'Thành công!',
            text: 'Đã gửi thông báo thành công.',
        });
    });
</script>

<!-- Graph Script-->
<script>
    var xValues = ["Đang làm", "Chờ duyệt", "Hoàn thành"];
    var yValues = [ @Model.GroupsInClass?.Sum(g => g.totalTaskOnGoing) ?? 0,
                    @Model.GroupsInClass?.Sum(g => g.totalTaskPending) ?? 0,
                    @Model.GroupsInClass?.Sum(g => g.totalTaskDone) ?? 0];
    var barColors = ["red", "yellow", "green"];

    new Chart("myChart", {
        type: "bar",
        data: {
            labels: xValues,
            datasets: [{
                backgroundColor: barColors,
                data: yValues
            }]
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: "Tổng các trạng thái công việc"
            }
        }
    });
</script>