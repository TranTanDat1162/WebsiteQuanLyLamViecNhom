@model WebsiteQuanLyLamViecNhom.HelperClasses.TempModels.GroupDTO
@{ 
    Layout = "~/Views/Shared/_ProjectTeacherLayout.cshtml";
}

<div class="row">
    <div id="breadcrumbs" class="card-body" style="
    padding-top: 0px;
    padding-bottom: 5px;">
    </div>
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="d-flex flex-wrap align-items-center justify-content-between breadcrumb-content">
                    <h5>@($"({Model.GroupViewModel.CurrentClass.Code}) {Model.GroupViewModel.CurrentClass.SubjectName}")</h5>
                    <div class="d-flex flex-wrap align-items-center">
                        <div class="form-group mt-0 mb-0">
                            <select class="custom-select" id="projectFilter" style="height:40px">
                                <option value="all" selected>Tất cả</option>
                                <option value="Pending">Chờ duyệt</option>
                                <option value="OnGoing">Đang làm</option>
                                <option value="Complete">Hoàn thành</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-8">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-8">
                        <div class="row align-items-center">
                            <div class="col-md-9">
                                <div class="mt-3 mt-md-0">
                                    <h5 class="mb-1">
                                        @Model.GroupViewModel.ProjectName
                                        @{
                                            var firstScore = Model.GroupViewModel.memberList.FirstOrDefault()?.Score; // Get the score once
                                            if (firstScore != null)
                                            {
                                                var badgeClass = firstScore < 3 ? "badge-danger" : firstScore < 6 ? "badge-warning" : "badge-success";
                                                <span class="badge @badgeClass ml-2">@firstScore Đ</span>
                                            }
                                        }
                                    </h5>
                                    <p class="mb-0">@Model.GroupViewModel.MOTD</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--Task List starts-->
        <div class="card">
            <div class="card-body">
                <div class="row">
                    @{
                        int uniqueIdCounter = 1;
                    }
                    @foreach(var task in Model.GroupViewModel.Tasks){
                        var uniqueId = $"Edit{uniqueIdCounter++}";
                        <div class="col-lg-12">
                            <div class="card card-widget task-card" data-status="@((int)task.Status)">
                                <div class="card-body">
                                    <div class="d-flex flex-wrap align-items-center justify-content-between">
                                        <div class="d-flex align-items-center">
                                            <div>
                                                <h5 class="mb-2">
                                                    @task.TaskName
                                                </h5>
                                                <div class="media align-items-center">
                                                    @if (@task.TaskGradedByLeader != null)
                                                    {
                                                        @if (task.TaskGradedByLeader < 5)
                                                        {
                                                            <div class="btn text-success bg-secondary-light mr-3">
                                                                <i class="ri-emotion-unhappy-line"></i>@task.TaskGradedByLeader / 10
                                                            </div>
                                                        }
                                                        else if (task.TaskGradedByLeader >= 5 && task.TaskGradedByLeader <= 7.75)
                                                        {
                                                            <div class="btn text-success bg-warning-light mr-3">
                                                                <i class="ri-emotion-happy-line"></i>@task.TaskGradedByLeader / 10
                                                            </div>
                                                        }
                                                        else if (task.TaskGradedByLeader >= 8)
                                                        {
                                                            <div class="btn text-success bg-success-light mr-3">
                                                                <i class="ri-emotion-laugh-line"></i>@task.TaskGradedByLeader / 10
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="media align-items-center mt-md-0 mt-3">
                                            @if (task.Status == WebsiteQuanLyLamViecNhom.Models.TaskStatus.Pending)
                                            {
                                                <a class="btn bg-warning-light mr-3" id="btnOnPending" data-status="1">Chờ duyệt</a>
                                            }
                                            @if (task.Status == WebsiteQuanLyLamViecNhom.Models.TaskStatus.OnGoing)
                                            {
                                                <a class="btn bg-secondary-light mr-3" id="btnOnGoing" data-status="0">Đang làm</a>
                                            }
                                            @if (task.Status == WebsiteQuanLyLamViecNhom.Models.TaskStatus.Complete)
                                            {
                                                <a class="btn bg-success-light mr-3" id="btnsuccess" data-status="2">Hoàn thành</a>
                                            }
                                            <a class="btn bg-primary-light" data-toggle="collapse"
                                               href="#@uniqueId"
                                               role="button" aria-expanded="false"
                                               aria-controls="@uniqueId">
                                                <i class="ri-edit-box-line m-0"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="collapse" id="@uniqueId">
                                <div class="card card-list task-card">
                                    <div class="card-body">
                                        <div class="card mb-3">
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-lg-6">
                                                        <div class="form-group mb-0">
                                                            <label for="exampleInputText2"
                                                                   class="h5">Thành viên phụ trách</label>
                                                            <select name="type"
                                                                    class="selectpicker form-control"
                                                                    data-style="py-0"
                                                                    multiple>
                                                                @foreach (var member in task.StudentClass)
                                                                {
                                                                    <option disabled selected>@member.Student.FirstName</option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-6">
                                                        <div class="form-group mb-0">
                                                            <label for="exampleInputText4" class="h5">
                                                                Hạn chót
                                                            </label>
                                                            <input disabled type="date" class="form-control"
                                                                   id="exampleInputText4" value="@task.DeadLineDate.ToString("yyyy-MM-dd")">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card mb-3">
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-lg-6">
                                                        <h5 class="mb-2">Ghi chú</h5>
                                                        <p class="mb-0" style="word-wrap: break-word;width: 800px;">
                                                            @task.Description
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group mb-3">
                                            <label for="exampleInputText01" class="h5">Tệp đính kèm</label>
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input"
                                                       id="inputGroupFile002" />
                                                <label class="custom-file-label"
                                                       for="inputGroupFile002">Upload media</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>
                    }    
                    @if (Model.GroupViewModel.Tasks.Count == 0)
                    {
                        <h5>
                            TODO: decorate when theres no Task
                        </h5>
                    }
                </div>
            </div>
        </div>
        <!--Task List ends-->
    </div>
    <!--Member List start-->
    <div class="col-lg-4">
        <form asp-action="GradeGroup">
            @{
                float? sumOfTaskGradedByLeader = 0;
                int taskcounter = 0;
                foreach (var task in Model.GroupViewModel.Tasks)
                {
                    if(task.TaskGradedByLeader != null)
                    {
                        taskcounter++;
                        sumOfTaskGradedByLeader += task.TaskGradedByLeader;
                    }
                }
                float? avgScoreByLeader = sumOfTaskGradedByLeader / taskcounter;
            }
            <div class="card">
                <div class="card-body">
                    <div class="input-group pt-1 pb-1">
                        <div class="input-group-prepend ">
                            <span class="input-group-text">Nhập điểm:</span>
                        </div>
                        <input asp-for="gradeGroupDTO.TeacherGrade" type="text" class="form-control" aria-label="Totalscore" data-listener-added_3fb1fa63="true">
                        <div class="input-group-append">
                            <span class="input-group-text">ĐTB:</span>
                            <span class="input-group-text">@string.Format("{0:0.00}", avgScoreByLeader)</span>
                            <input asp-for="gradeGroupDTO.LeaderAGVGrade" value="@avgScoreByLeader" hidden>
                            <input asp-for="gradeGroupDTO.GroupID" value="@Model.GroupViewModel.GroupID" hidden>
                            <button type="submit" class="btn btn-primary">
                                <i class="ri-send-plane-fill"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div id="list" class="item-content animate__animated animate__fadeIn active" data-toggle-extra="tab-content">
            <div class="table-responsive rounded bg-white mb-4">
                <table class="table mb-0 table-borderless tbl-server-info">
                    <tbody>
                        <div class="card-body">
                            <h5 class="md-3">Members List</h5>
                        </div>
                        <tr>
                            <td>
                                <div class="media align-items-center">
                                    <h6 class="ml-3">
                                        @Model.GroupViewModel.LeaderName
                                    </h6>
                                    <span class="badge badge-leader">
                                        <i class="ri-vip-crown-fill"></i>
                                        Leader
                                    </span>
                                </div>
                            </td>
                        </tr>
                        @foreach(var student in Model.GroupViewModel.memberList)
                        {
                            if (student.Student.StudentCode != Model.GroupViewModel.LeaderID)
                            {
                                <tr>
                                    <td>
                                        <div class="media align-items-center">
                                            <h6 class="ml-3">@($"{student.Student.FirstName} {student.Student.LastName}")</h6>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!--Member List end -->
</div>
<script>
    // Xử lý sự kiện khi giá trị của dropdown thay đổi
    document.getElementById('projectFilter').addEventListener('change', function () {
        // Lấy giá trị của dropdown
        var selectedStatus = document.getElementById('projectFilter').value;

        // Lặp qua tất cả các card để ẩn/hiện tùy thuộc vào giá trị của dropdown
        var allCards = document.querySelectorAll('.task-card');
        for (var i = 0; i < allCards.length; i++) {
            var card = allCards[i];

            // Lấy giá trị data-status của từng card
            var cardStatus = card.getAttribute('data-status');

            // Ẩn hoặc hiện card tùy thuộc vào giá trị của dropdown
            switch (selectedStatus) {
                case 'all':
                    card.style.display = 'block';
                    break;
                case 'Pending':
                    card.style.display = cardStatus === '1' ? 'block' : 'none';
                    break;
                case 'OnGoing':
                    card.style.display = cardStatus === '0' ? 'block' : 'none';
                    break;
                case 'Complete':
                    card.style.display = cardStatus === '2' ? 'block' : 'none';
                    break;
                default:
                    card.style.display = 'none';
                    break;
            }
        }
    });
</script>
